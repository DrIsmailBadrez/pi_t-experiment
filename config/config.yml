N: 6 # minimum number of clients before running protocol
n: 6 # minimum number of relays before running protocol
l1: 3         # Number of planned mixers in a routing path
l2: 2         # Number of planned gatekeepers in a routing path
x: 25         # Server load (x = Ω(polylog λ)) i.e. the expected number of onions per intermediary hop
tau: 0.8      # (τ < (1 − γ)(1 − X)) Fraction of checkpoints needed to progress local clock
d: 2          # Threshold for number of bruises before an onion is discarded by a gatekeeper
delta: 1e-5   # The probability of differential privacy violation due to the adversary's actions.
chi: 1.0      # Fraction of corrupted relays (which perform no mixing)
dropAllOnionsFromClient: 1 # Client ID to drop all onions from
vis: true     # Visualize the network
scrapeInterval: 15 # Prometheus scrape interval in seconds
prometheusPath: '/opt/homebrew/bin/prometheus'
<<<<<<< HEAD

metrics:
  host: 'localhost'
  port: 8200

=======
>>>>>>> upstream/5-have-bulletin-board-distribute-configurations
bulletin_board:
  host: '192.168.1.1'
  port: 8080
<<<<<<< HEAD

clients:
  - id: 1
    host: '192.168.1.8'
    port: 8101
    prometheus_port: 9101
  - id: 2
    host: '192.168.1.9'
    port: 8102
    prometheus_port: 9102
  - id: 3
    host: '192.168.1.10'
    port: 8103
    prometheus_port: 9103
  - id: 4
    host: '192.168.1.11'
    port: 8104
    prometheus_port: 9104
  - id: 5
    host: '192.168.1.12'
    port: 8105
    prometheus_port: 9105
  - id: 6
    host: '192.168.1.13'
    port: 8106
    prometheus_port: 9106

relays:
  - id: 1
    host: '192.168.1.2'
    port: 8081
    prometheus_port: 9201
  - id: 2
    host: '192.168.1.3'
    port: 8082
    prometheus_port: 9202
  - id: 3
    host: '192.168.1.4'
    port: 8083
    prometheus_port: 9203
  - id: 4
    host: '192.168.1.5'
    port: 8084
    prometheus_port: 9204
  - id: 5
    host: '192.168.1.6'
    port: 8085
    prometheus_port: 9205
  - id: 6
    host: '192.168.1.7'
    port: 8086
    prometheus_port: 9206
=======
  promPort: 8200 # where aggregated prometheus metrics are served from
>>>>>>> upstream/5-have-bulletin-board-distribute-configurations
